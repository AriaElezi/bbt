.form {
  width: toRem(398);
  height: auto;
  padding: $unit-3;
  background-color: $bbt-white;
  border-radius: toRem(4);
  box-shadow: 2px 2px 8px 0 rgba(0, 0, 0, 0.1);

  &__logo {
    margin-bottom: $unit-3;
  }

  &__field,
  &__field-select {
    display: flex;
    flex-direction: column;
    gap: $unit-0;

    &:focus-within {
      .label {
        color: $bbt-primary-green;
      }
    }

    .error-message {
      display: none;
    }

    // Styling for error message
    &.error {
      .form__label {
        color: $bbt-text;
      }

      .form__input {
        color: $bbt-red-100;
        border-bottom-color: $bbt-red-100;

        // Remove background color for autofilled fields
        &:-webkit-autofill {
          -webkit-box-shadow: 0 0 0 1000px $bbt-white inset !important;
          -webkit-text-fill-color: $bbt-red-100 !important;
        }
      }

      .error-message {
        display: block;
        color: $bbt-red-100;
      }
    }
  }

  &__label {
    &.filled {
      color: $bbt-primary-green;
    }
  }

  &__input {
    width: 100%;
    border: none;
    color: $bbt-grey-50;
    border-bottom: toRem(1) solid $bbt-grey-50;
    padding: 0 0 toRem(5);
    background: none;
    outline: none;
    transition: all 0.35s ease-in-out;

    &::placeholder {
      color: $bbt-grey-50;
    }

    &:not(:placeholder-shown) {
      color: $bbt-text;
      border-bottom-color: $bbt-secondary-grey;
    }

    &:hover,
    &:focus,
    &:active {
      color: $bbt-text;
      border-bottom-color: $bbt-secondary-grey;
    }

    // Remove background color for autofilled fields
    &:-webkit-autofill {
      -webkit-box-shadow: 0 0 0px 1000px $bbt-white inset !important;
    }
  }

  &__label-mandatory {
    margin-left: toRem(3);
    color: $bbt-orange-100;
  }

  // Select styles
  &__select {
    &.filled {
      .react-select__control {
        border-bottom-color: $bbt-secondary-grey;
      }
    }
  }

  .react-select {
    &__value-container {
      padding: 0;
    }

    &__control {
      min-height: toRem(18);
      border: none;
      border-bottom: toRem(1) solid $bbt-grey-50;
      border-radius: 0;
      background: none;
      box-shadow: none;
      padding: 0;
      transition: border-color 0.35s ease-in-out;
      cursor: pointer;

      &:hover {
        border-bottom-color: $bbt-secondary-grey;

        .react-select__dropdown-indicator {
          background-color: $bbt-primary-green;
        }

        .react-select__placeholder {
          color: $bbt-secondary-grey;
          transition: color 0.35s ease-in-out;
        }
      }

      &--is-focused {
        border-bottom-color: $bbt-primary-green;
      }
    }

    &__input {
      margin-left: toRem(-2) !important;
    }

    &__placeholder {
      margin-left: 0;
      font-family: $font--boxed-regular;
      font-weight: 500;
      font-size: 14px;
      line-height: 18px;
      color: $bbt-grey-50;
      transition: color 0.35s ease-in-out;
    }

    &__single-value {
      margin-left: 0;
      color: $bbt-text;
    }

    &__indicator-separator {
      display: none;
    }

    &__indicator {
      color: $bbt-grey-50;
      width: toRem(18);
      height: toRem(18);
      display: inline-block;
      mask-repeat: no-repeat;
      mask-position: center;
      transition: background-color 0.35s;
    }

    &__clear-indicator {
      mask-image: url("data:image/svg+xml,%3Csvg width='14' height='14' viewBox='0 0 14 14' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg id='X'%3E%3Cpath id='Vector' d='M11.2473 10.628C11.2879 10.6686 11.3202 10.7169 11.3422 10.77C11.3642 10.8231 11.3755 10.88 11.3755 10.9375C11.3755 10.995 11.3642 11.0519 11.3422 11.105C11.3202 11.1581 11.2879 11.2064 11.2473 11.247C11.2066 11.2877 11.1584 11.3199 11.1053 11.3419C11.0522 11.3639 10.9952 11.3752 10.9377 11.3752C10.8803 11.3752 10.8233 11.3639 10.7702 11.3419C10.7171 11.3199 10.6689 11.2877 10.6282 11.247L7.00024 7.61851L3.37227 11.247C3.29018 11.3291 3.17884 11.3752 3.06274 11.3752C2.94665 11.3752 2.8353 11.3291 2.75321 11.247C2.67112 11.1649 2.625 11.0536 2.625 10.9375C2.625 10.8214 2.67112 10.7101 2.75321 10.628L6.38173 7L2.75321 3.37203C2.67112 3.28994 2.625 3.1786 2.625 3.0625C2.625 2.9464 2.67112 2.83506 2.75321 2.75297C2.8353 2.67088 2.94665 2.62476 3.06274 2.62476C3.17884 2.62476 3.29018 2.67088 3.37227 2.75297L7.00024 6.38148L10.6282 2.75297C10.7103 2.67088 10.8216 2.62476 10.9377 2.62476C11.0538 2.62476 11.1652 2.67088 11.2473 2.75297C11.3294 2.83506 11.3755 2.9464 11.3755 3.0625C11.3755 3.1786 11.3294 3.28994 11.2473 3.37203L7.61876 7L11.2473 10.628Z' fill='%23A9130A'/%3E%3C/g%3E%3C/svg%3E%0A");
      background-color: $bbt-secondary-grey;
      margin-right: $unit-0;

      &:hover {
        background-color: $bbt-primary-green;
      }
    }

    &__dropdown-indicator {
      mask-image: url("data:image/svg+xml,%3Csvg width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg id='CaretDown'%3E%3Cpath id='Vector' d='M15.023 7.14798L9.39798 12.773C9.34574 12.8253 9.2837 12.8668 9.21541 12.8951C9.14713 12.9234 9.07393 12.938 9.00001 12.938C8.92609 12.938 8.85289 12.9234 8.7846 12.8951C8.71632 12.8668 8.65428 12.8253 8.60204 12.773L2.97704 7.14798C2.87149 7.04243 2.81219 6.89927 2.81219 6.75001C2.81219 6.60074 2.87149 6.45759 2.97704 6.35204C3.08259 6.24649 3.22574 6.18719 3.37501 6.18719C3.52427 6.18719 3.66743 6.24649 3.77298 6.35204L9.00001 11.5798L14.227 6.35204C14.2793 6.29978 14.3413 6.25832 14.4096 6.23004C14.4779 6.20175 14.5511 6.18719 14.625 6.18719C14.6989 6.18719 14.7721 6.20175 14.8404 6.23004C14.9087 6.25832 14.9707 6.29978 15.023 6.35204C15.0752 6.4043 15.1167 6.46634 15.145 6.53463C15.1733 6.60291 15.1878 6.6761 15.1878 6.75001C15.1878 6.82392 15.1733 6.8971 15.145 6.96539C15.1167 7.03367 15.0752 7.09571 15.023 7.14798Z' fill='%23A9A9AA'/%3E%3C/g%3E%3C/svg%3E%0A");
      background-color: $bbt-grey-50;
    }

    &__menu {
      border-radius: 0;
      box-shadow: 0px 6px 16px 0 rgba(0, 0, 0, 0.08);
      border-bottom: toRem(1) solid $bbt-primary-green;
      z-index: 100;
      padding: toRem(10) toRem(8) toRem(8) 0;
    }

    &__menu-list {
      max-height: toRem(140);
      overflow-y: auto;

      // Custom scrollbar styling
      &::-webkit-scrollbar {
        width: toRem(6);
      }

      &::-webkit-scrollbar-track {
        background: $bbt-white;
        border-radius: toRem(3);
      }

      &::-webkit-scrollbar-thumb {
        background-color: $bbt-grey-30;
        border-radius: toRem(3);
      }
    }

    &__option {
      background: $bbt-white;
      color: $bbt-text;
      display: flex;
      align-items: center;
      padding: toRem(5) toRem(12);
      cursor: pointer;

      &:first-child {
        padding: 0 toRem(12) toRem(5);
      }

      &:last-child {
        padding: toRem(5) toRem(12) 0;
      }

      &--is-focused {
        color: $bbt-text;
      }

      &--is-selected {
        color: $bbt-text;
      }

      // Custom styling to highlight "Match" text in green
      &.custom-option {
        .highlight {
          color: $bbt-red-100 !important;
        }
      }
    }
  }

  &__field-select {
    gap: 0;

    &.error {
      .filled {
        .react-select__control {
          border-bottom-color: $bbt-red-100;
        }
      }

      .react-select__single-value {
        color: $bbt-red-100;
      }

      .react-select__control {
        border-bottom-color: $bbt-red-100;
      }

      .react-select__clear-indicator {
        background-color: $bbt-red-50;

        &:hover {
          background-color: $bbt-primary-green;
        }
      }

      .react-select__dropdown-indicator {
        background-color: $bbt-red-50;
      }

      .error-message {
        margin-top: $unit-0;
      }
    }
  }
  // End Select
}

.form-radio {
  display: flex;
  gap: $unit-factor;

  .radio-button {
    display: flex;
    position: relative;
    align-items: center;

    input[type="radio"] {
      right: 0;
      left: auto;
      margin: 0 !important;
      border: toRem(2) solid $bbt-grey-50;
      box-shadow: none;
      padding: 0;
      -webkit-appearance: inherit;
      appearance: inherit;
      border-radius: 50%;
      box-sizing: border-box;
      width: toRem(18);
      height: toRem(18);
      cursor: pointer;
      transition: 0.3s ease;

      &:checked {
        border: toRem(6) solid $bbt-primary-green;
        transition: 0.2s ease;

        &:hover {
          border: toRem(6) solid $bbt-primary-green;
          transition: 0.3s ease;
        }

        &:disabled {
          border: toRem(2) solid $bbt-grey-30;
          transition: 0.3s ease;
        }
      }

      &:not(:checked) {
        background: $bbt-grey-5;
      }

      &:hover {
        border: toRem(2) solid $bbt-secondary-grey;
        transition: 0.3s ease;
      }

      &:disabled {
        border: toRem(2) solid $bbt-grey-30;
        transition: 0.3s ease;
      }
      &.input-error {
        border: toRem(2) solid $bbt-red-100;

        &:hover {
          border: toRem(2) solid $bbt-red-100;
          transition: 0.3s ease;
        }

        &:focus {
          transition: 0.3s ease;
          border: toRem(2) solid $bbt-red-100;
          color: $bbt-red-100;
        }
      }
    }
  }
}

.form-checkbox {
  display: flex;
  gap: $unit-factor;
  cursor: pointer;

  input[type="checkbox"] {
    right: 0;
    left: auto;
    margin: 0 !important;
    border: toRem(2) solid $bbt-grey-50;
    box-shadow: none;
    padding: 0;
    -webkit-appearance: inherit;
    appearance: inherit;
    box-sizing: border-box;
    width: toRem(18);
    height: toRem(18);
    cursor: pointer;
    transition: 0.3s ease;

    &:checked {
      border: toRem(6) solid $bbt-primary-green;
      transition: 0.2s ease;

      &:hover {
        border: toRem(6) solid $bbt-primary-green;
        transition: 0.3s ease;
      }

      &:disabled {
        border: toRem(2) solid $bbt-green-50;
        transition: 0.3s ease;
      }
    }

    &:not(:checked) {
      background: $bbt-grey-5;
    }

    &:hover {
      border: toRem(2) solid $bbt-secondary-grey;
      transition: 0.3s ease;
    }

    &:disabled {
      border: toRem(2) solid $bbt-grey-30;
      transition: 0.3s ease;
    }
    &.input-error {
      border: toRem(2) solid $bbt-red-100;

      &:hover {
        border: toRem(2) solid $bbt-red-100;
        transition: 0.3s ease;
      }

      &:focus {
        transition: 0.3s ease;
        border: toRem(2) solid $bbt-red-100;
        color: $bbt-red-100;
      }
    }
  }
}

.search-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  @media (max-width: 768px) {
    width: 100%;
    flex-wrap: wrap;
  }
  button {
    @media (max-width: 768px) {
      margin-top: $unit-1;
      width: 100%;
    }

    @media (min-width: 1200px) {
      width: toRem(300);
    }
  }
}
.searchable-select {
  position: relative;
  width: 100%;

  .icon-magnifying-glass {
    position: absolute;
    left: $unit-1;
    top: 50%;
    transform: translateY(-50%);
    width: toRem(32);
    height: toRem(32);
    pointer-events: none;
    background-color: $bbt-grey-50;
  }

  .searchable-input {
    width: 100%;
    height: toRem(60);
    padding-left: 70px;
    background-color: $bbt-white;
    border-radius: toRem(4);
    box-shadow: 2px 2px 8px 0 rgba(0, 0, 0, 0.1);
    border: 1px solid $bbt-grey-5;
    font-size: 16px;
    color: $bbt-secondary-grey;
    max-width: 100%;

    &::placeholder {
      color: $bbt-grey-50;
      transition: color 0.35s ease-in-out;
    }

    &:focus {
      outline: none;
    }

    @media (min-width: 400px) {
      width: toRem(500);
    }

    @media (min-width: 1024px) {
      width: toRem(610);
    }
  }

  .select-options {
    position: absolute;
    top: 100%;
    left: 0;
    width: 100%;
    max-height: 200px;
    color: $bbt-grey-70;
    overflow-y: auto;
    background-color: $bbt-white;
    border-radius: 4px;
    z-index: 1000;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
    margin-top: toRem(8);

    @media (min-width: 768px) {
      width: toRem(400);
    }

    @media (min-width: 1024px) {
      width: toRem(610);
    }

    .select-option {
      padding: toRem(12);
      cursor: pointer;

      &:hover {
        background-color: $bbt-grey-5;
      }

      .highlight {
        color: $bbt-primary-green;
      }
    }
  }
}
